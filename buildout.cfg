[buildout]
parts =
      py
      django
      sphinx
      var-directory
develop = .
eggs = django-competition
eggs-directory = var/eggs
parts-directory = var/parts
develop-eggs-directory = var/develop-eggs

[versions]
Django = >1.4,<1.5

# Creates several subdirectories with var/ so that the django project
# can store database files and uploaded files
[var-directory]
recipe = z3c.recipe.mkdir
paths = var/db
      var/uploads

# Creates a python interpreter that has access to all the goodies that
# buildout installs
[py]
recipe = zc.recipe.egg
eggs = ipython
     readline
     ${buildout:eggs}
scripts = ipython=py

# Documentation generator
[sphinx]
recipe = zc.recipe.egg
eggs = Sphinx
     ${buildout:eggs}

# Tells the [django] part to install nose-achievements from git. It's
# not listed as a part in [buildout], but it gets installed since
# [django] depends on it.
[nose-achievements]
recipe = zerokspot.recipe.git
repository = git://github.com/exogen/nose-achievements.git
rev = 1d57f9e8e95ee0459876ea618b3ca3a34d629371
as_egg = True

# Creates a django project for the app to live in
[django]
recipe = djangorecipe
project = project
test = competition
testrunner = nosey
extra-paths = ${nose-achievements:location}
eggs = ${buildout:eggs}
     ipython            # Gives us a fancy ipython interpreter for django shell
     readline           # Needed by ipython
     django-extensions  # Provides some extra django management commands
     werkzeug           # Used by django-extensions
     django-nose        # Django-nose allows us to run tests with nose
     nose-achievements  # Testing achievements
     yanc				# Allows for colorized output from nose tests
     coverage           # Coverage determines what code is covered by the unit tests
     django-debug-toolbar       # Toolbar to help web debugging
     pillow             # Portable version of the Python Imaging Library
     django-admin-tools # Admin tools

# Creates a MUCH simpler django project for the app to live in. This
# part is intended to be used by a continuous integration service,
# that way it does'nt have to download and install a million-billion
# packages that it isn't going to use.
[simple-django]
recipe = djangorecipe
project = project
settings = simple
test = competition
testrunner = nosey
eggs = ${buildout:eggs}
     django-nose        # Django-nose allows us to run tests with nose
     coverage           # Coverage determines what code is covered by the unit tests
     pillow             # Portable version of the Python Imaging Library
